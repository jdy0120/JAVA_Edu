SQL(Structed Query Language)

테이블 생성
create table 테이블명 (
   컬럼명1 자료형1 [제약조건들], 
   컬럼명2 자료형2 [제약조건들],
   ...
   컬럼명n 자료형n [제약조건들],
   [외래 키 제약조건(들)]
);


 - 제약조건
    데이터의 무결성을 지키기 위한 제한된 조건을 의미
    PRIMARY KEY 제약조건
     - 특정 칼럼을 기본 키로 지정하여
     - 사용법 : 테이블 생성시 : 컬럼명 자료형 primary key
     - 여러 컬럼을 기본 키로 지정할 경우 컬럼 정의 밑에서
        constraint 기본키명 primary key (기본키로 묶을 컬럼명들)
	기본기명 : 기본키 제약조건의 이름으로 중복되면 안됨(예 : pk_컬럼명들)

    FOREIGN KEY 제약조건
     - 두 테이블 사이의 관계를 선언함으로써 데이터의 무결성을 보장해 주는 역할을 함
     - 사용법 : 테이블 생성문 가장 아래에 다음과 같이 입력
        constraint 외래키명 foreign key (칼럼명) references 참조테이블명(참조컬럼명) on [delete| update] cascade
     - 참조 컬럼은 반드시 기본 키 또는 unique 제약조건을 가진 컬럼이어야 함
     - cascade 옵션을 지정하지 않으면 자동으로 on [delete| update] no action으로 지정됨

    UNIQUE 제약조건
     - 특정 컬럼에 중복불가 제약조건을 걸어줌. 단, null값은 허용됨

    DEFAULT 제약조건
     - 특정 컬럼에 데이터를 입력하지 않으면 자동으로 들어갈 값을 지정해 놓는 제약조건
     - 숫자나 문자열등의 특정 값도 가능하지만 now() 등과 같은 함수도 사용할 수 있음
     - 사용예 : 컬럼명 자료형 default 100 -- 현 컬럼에 값을 넣지 않으면 100이 들어감

    NULL 값 허용
     - 특정 컬럼을 비워둘 수 있는지 여부를 지정하는 제약조건
     - 사용예
        컬럼명 자료형 null -- 현 컬럼은 비워둘 수 있다.(기본값)
	컬럼명 자료형 not null -- 현 컬럼은 비워둘 수 없다.

SQL(Structed Query Language : 구조적 질의 어)
 - 에스큐엘, 쿼리 등으로 불리우며 DBMS에 명령을 내리는 언어
 - sql은 DBMS 제작회사 별로 다를 수도 있지만 표준이 있어 표준에 맞는 SQL은 어떤 DBMS에서도 사용할 수 있음
    단, 표준으로만 사용하기에는 한계가 있어 각 DBMS별 명령어를 사용하기도 함
    Oracle은 PL/SQL, MS-SQL은 T-SQL, MySql은 SQL이라 부름
 - 생성 쿼리
    DB, 테이블, 인덱스, 뷰 등의 객체를 생성할 때 사용하는 쿼리
    문법) create [객체종류] [객체명] [내용];
 - 변경 쿼리
    DB, 테이블, 인덱스, 뷰 등의 객체를 생성할 때 사용하는 쿼리
    문법) alter [객체종류] [객체명] [내용];
 -삭제 쿼리
    DB, 테이블, 인덱스, 뷰 등의 객체를 생성할 때 사용하는 쿼리
    문법) drop [객체종류] [객체명] [내용];

 - 데이터 관련 쿼리
    데이터에 직접적으로 영향을 주는 쿼리로 입력, 수정, 삭제, 검색 등의 쿼리가 조재함
    입력 : insert into 테이블명 (컬럼명들) values (값들);
     - 특정 테이블에 새로운 레코드를 추가할 때 사용하는 쿼리
    수정 : update 테이블명 set 컬럼명 = 값, ... , 컬럼명 = 값 [where 조건]
     - 특정 테이블의 특정 레코드(들)의 값을 변경할 때 사용
    삭제 : delete 테이블명 [where 조건];
     - 특정 테이블의 특정 레코드(들)의 값을 삭제할 때 사용
    검색 : select 필드명(들) from 테이블명(들) [where 조건 ...];
     - 테이블에서 지정한 조건에 맞는 레코드들을 검색하여 출력



테이블 이외의 DB 객체
1. 인덱스(index)
 - 일종의 찾아보기 기능으로 검색속도를 향상해야 할 때 사용됨
 - 변경이 잦거나, 입력 또는 출력이 잦을 경우 오히려 역효과가 날 수 있음
 - 또한 검색결과가 지나치게 많으면 역시 사용하지 않는 것이 좋음
 - 특정 필드를 PK로 지정하면 자동으로 인덱스를 만들어줌


2. 뷰(View)
 - 일종의 가상 테이블로 기존의 테이블(들)의 데이터들을 조합하여 새롭게 만든 뷰
 - 뷰를 검색하여도 테이블을 검색하는 것도 동일한 데이터 결과가 나타난다.
 - 속도 향상을 위해 만들어 (검색)속도 향상을 위해 만들어진 객체


3. 스토어드 프로시저(Stored Procedure)
 - DB에 저장되 있는 기능으로 직접 만들어 사용할 수 있음
 - 스토어드 프로시저 사용 시 일반 쿼리보다 프로그래밍에서 처리 속도가 더 빠름
    보안에도 더 뛰어나 프로그래밍시 스토어드 프로시저를 사용하는 경우가 많다.

4. 트리거(Trigger)
 - 특정 데이터를 테이블에 입력, 수정, 삭제 작업이 발생되고 실행되는 코드를 의미
 - 좋은 기능이나 리소스를 많이 차지하는 부분이 있어 자주 사용되는 기능은 아님

5. 함수(Function)
 - 프로시저와 비슷하며, 리턴값이 존재함

테이블 삭제
 - 테이블 자체를 삭제하므로 그 안의 데이터들도 같이 삭제됨
drop table 삭제할 테이블명;

테이블 수정
 - 테이블 구조를 수정하는 구문
alter table 테이블명 [...];
 - 칼럼 추가
    alter table 테이블명 add 컬럼명 자료형 제약조건 [first | alter 기존컬럼명];
 - 컬럼명 및 자료형 변경
    alter table 테이블명 change column 기존컬럼명 새컬럼명 자료형;
     - 변경이 일어나지 않도록 해야 하며, 변경시에도 주의해서 작업해야 함
 - 컬럼의 제약조건 삭제
    alter table 테이블명 drop [primary key | foreign key 외래키명];

임시 테이블 생성
 - 임시 테이블은 잠시동안 작업하고 사라질 테이블을 의미
 - 삭제되는 시점
    사용자가 직접 drop table로 삭제할 경우
    workbench를 종료할 경우
    MySQL 서비스가 종료되거나 재시작할 경우
 - 문법
create temporary table 임시테이블명 ( 컬럼들 정의 );
    일반 테이블과 문법은 동일하며 'temporary'만 붙여주면 됨


기본쿼리
 - 사이트내에서 사용할 쿼리들로 입력(insert), 수정(update), 삭제(delete), 검색(select) 등이 있음(테이블이 존재하는 상태에서 사용됨)

데이터 입력 : insert
 - 문법
insert into 테이블명 (컬럼명1, 컬럼명2, ... , 컬럼명n) values (값1, 값2, ... , 값n);
 - 모든 컬럼에 값을 넣는 경우 컬럼명을 생략할 수 있음
 - 입력한 컬럼명의 순서대로 값을 지정해야 함
