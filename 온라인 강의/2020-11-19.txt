74.33GB

Client side language : HTML, CSS, JavaScript, JQuery
Server side language : Java, JSP, Servlet
DBMS : MySQL
Web Server : Apache-Tomcat

select a.pl_idx, a.pl_name,count(b.pl_idx) 판매횟수, sum(b.od_cnt) 판매개수, year(c.ol_date), month(c.ol_date)
from tm_product_list a, tm_order_detail b, tm_order_list c
where a.pl_odx = b.pl_idx and b.ol_id = c.ol_id
group by a.pl_idx, a.pl_name, year(c.ol_date), month(c.ol_date);
-- 월별(연도 포함) 총 판매횟수 및 개수

select a.pl_idx, a.pl_name,count(b.pl_idx) 판매횟수, sum(b.od_cnt) 판매개수, year(c.ol_date), month(c.ol_date)
from tm_product_list a, tm_order_detail b, tm_order_list c
where a.pl_odx = b.pl_idx and b.ol_id = c.ol_id
group by a.pl_idx, a.pl_name, year(c.ol_date), month(c.ol_date);
-- 월별(연도 포함) 총 판매횟수 및 개수


-- stored function 예제
set global log_bin_trust_function_creators = 1;
-- 함수생성 권한을 부여

drop function if exists testFunc;
delimiter $$
create function testFunc(v1 int, v2 int) returns int
begin
    declare result int;
    set result v1 + v2;
    return result
end $$
delimiter ;

select testFunc(10,20); -- 실행

-- 태어난 연도를 인수로 받아 나이를 계산하여 리턴하는 함수 getAgeFunc()작성
drop function if exists getAgeFunc;
delimiter $$
create function getAgeFunc(bYear int) returns int
begin
    declare age int;
    set age = year(now()) - bYear;
    return age;
end $$
delimiter ;
select getAgeFunc(1988);

-- tm_member_list테이블의 생일을 이용하여 회원ID, 이름, 나이를 출력하는 select문 작성
select ml_id, ml_name, getAgeFunc(left(ml_birth, 4)) age
from tm_member_list;

-- 공지글 테스트용 겸 자료실 테이블
create table tm_bbs_pds (
    bp_idx int primary key, -- 글번호
    bp_writer varchar(20) not null, -- 작성자(보통은 관리자ID)
    bp_title varchar(100) not null, -- 제목
    bp_content text not null, -- 내용
    bp_file varchar(20), -- 첨부파일(null허용)
    bp_size int default  0, -- 파일용량
    bp_read int default 0, -- 조회수
    bp_down int default 0, -- 다운로드수
    bp_rate int default 1, --평가점수(1~5)
    bp_status char(1) default 'a', -- 글상태(a:일반,b:삭제)
    bp_date datetime default now() -- 작성일
);

-- 작료실 글등록 프로시저 sp_bbs_pds_in 제작
drop procedure if exists sp_bbs_pds_in;
delimiter $$
    create procedure sp_bbs_pds_in(bpidx int, bpwriter varchar(20), bptitle varchar(100), bpcontent text, bpfile varchar(20),bpsize int , bpstatus char(1))
begin
    -- 용량이 5MB 이하일 경우에만 실행
    declare max int;
    declare noticeCnt int; -- 현재 공지글 개수를 저장할 변수
    declare noticeMin int; -- 가장 오래된 공지글의 글번호

    set max = 5* 1024*1024;

    if bpsize <= max then
        -- 공지글은 최대 5개 까지만 등록되도록 작업
        if bpstatus = 'b' then
            select count(*) into noticeCnt
            from tm_bbs_pds where bp_status = 'b';

            if noticeCnt >= 5 then
                select min(bp_idx) into noticeMin
                from tm_bbs_pds where bp_status = 'b';
                -- 가장 오래된 공지글의 글번호를 noticeMin 변수에 저장

                update tm_bbs_pds set bp_status = 'a'
                where  bp_idx = noticeMin;
                -- 가장 오래된 공지글을 일반글로 변환 시킴

            end if;

        end if;
        select max(bp_idx) + 1 into bpidx from tm_bbs_pds;
        -- 새롭게 등록될 글의 글번호 생성


        insert into tm_bbs_pds (bp_idx,bp_writer, bp_title, bp_content, bp_file, bp_size,bp_status)
        values (bpidx,bpwriter, bptitle, bpcontent, bpfile, bpsize,bpstatus);
    end if;
end $$
delimiter ;

call sp_bbs_pds_in ('관리자','엄청 좋은 자료','??','',0,'a');

insert into tm_bbs_pds (bp_idx,bp_writer,bp_title,bp_content,bp_file,bp_size,bp_status)
values (1,'관리자','제목...','내용...','a.jpg','1002','b');

select * from tm_bbs_pds;


-- 설문조사 관련 테이블 : 회원전용으로 모두 객관식이고, 보기는 최대 5개 까지 등록
-- 설문조사 질문 테이블(보기 포함), 설문조사 참여 테이블(회원ID, 선택한 보기)

create table tm_poll_question (
    pq_idx int auto_increment primary key, -- 설문번호
    pq_question varchar(100) not null, -- 질문내용
    pq_ex1 varchar(100) not null, -- 보기1
    pq_ex2 varchar(100) not null, -- 보기2
    pq_ex3 varchar(100), -- 보기3
    pq_ex4 varchar(100), -- 보기4
    pq_ex5 varchar(100), -- 보기5
    pq_sdate datetime default now(), -- 설문시작일
    pq_edate datetime default now(), -- 설문종료일
    pq_status char(1) default 'a', -- 설문상태(a:대기,b:조사중,c:종료,d:보류)
    pq_date datetime default now() -- 등록일
);


-- 설문조사 참여 테이블(회원ID, 선택한 보기)
create table tm_poll_result (
    pr_idx int auto_increment unique,
    -- auto_increment로 지정하는 컬럼은 반드시 key로 지정되어야 함
    -- primary key로 지정안되면 unique키로 지정해야 함
    pq_idx int not null, -- 설문조사 ID
    ml_id varchar(20) not null, -- 참여한 회원ID
    pr_ex int not null, -- 선택한 보기 번호
    pr_date datetime default now(), -- 참여일
    primary key(ml_id,pq_idx),
    -- ml_id와 pq_idx 두 컬럼을 묶어서 PK로 지정
    -- 각각은 값이 중복될 수 있으나 두 값을 묶었을 때는 중복되지 않음
    constraint fk_pr_ml_id foreign key (ml_id) references tm_member_list(ml_id), -- 회원ID외래키 지정
    constraint fk_pr_pq_idx foreign key (pq_idx) references tm_poll_question(pq_idx) -- 설문조사ID 외래키 지정
);
